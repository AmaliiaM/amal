#include 
"all_libraries.h"

class Human {

double height;

string eyes_color;
string name;
string

Last_name;
int energy;
bool soreThroat;
int cleanliness;
int mood;
int hunger;// 0 - full; 100 - hungry;
int* salaries_list;

public:

Human();
Human (double height, string eyes_color);
void SetHeight(double height);
double GetHeight() const;

void SetEyes_color(string eyes_color);
string GetEyes_color() const;

void SetName(string name);
string GetName() const;

void SetLastName(string last_name);
string GetLastName() const;

void SetEnergy(int energy);
int GetEnergy() const;

void SetSoreThroat (bool soreThroat);
bool GetSoreThroat() const;

void SetCleanliness(int cleanliness);
int GetCleanliness() const;

void SetMood(int mood);
int GetMood() const;

void SetHunger (int hunger);
int SetHunger() const;

void AddSalary(int);
int* GetSalary()_;


Human: : Human()
{
SetHeight(187);
SetEyes_color ("blue");
SetName("Sem");
SetLastName("Dep");
SetEnergy (10);
SetSoreThroat(0);
SetCleanliness (10);
SetMood (10) ;
SetHunger (10);
salaries_list = new int[12];
}



Human: : Human()
{
  cout <<"Object has been destroyed!\n";
  delete[] salaries_list;
}
void Human: : AddSalary(int salaries_list)
{
  // add 1 element to dynamic 1D-array
}
// think about state-safety
int* Human: :GetSalary()
{
return salaries_list;
}




public:
   /// <summary>
   /// method to set day of birth
   /// </ summary>
   /// <param name="day"></param>

   void
   SetDay(int day)
   {
     if (day > 0 && day <= 31) // TO DO: february 28-29, april june 30
    {
      this->day = day;
    }
    else
    {
     cout « "Invalid value!" « endl;
     throw "ERROR! \n" ;
    }
   }
    /// <summary>
    /// method to get the day of birth
    /// </summary>
    ///<returns>day</returns>
    int GetDay() const
   {
      return day;
   }
     ///<summary>
     /// method to set month of birth
     /// </ summary>
     /// <param name="month"></param>
void SetMonth(int month)


  /// <param name="month"></param>
  void SetMonth(int month)
  {
    if (month >= 1 && month <= 12)
    {
      this->month = month;
    }
    else
    {
      cout « "Invalid value!" « endl;
      throw "ERROR! \n";
     }
   }

     /// <summary>
     /// method to get the month of birth
     /// </summary>
     /// <returns>month</returns>
     int GetMonth() const
     {
       return month;
     }
     ///‹summary>
     ///method to set year of birth
     /// </summary>
     /// <param name="year"></param>
     void SetYear(int year)
    {
       this->year = year;
    }
     ///‹summary>
     /// method to get the year of birth
     /// </summary>
     ///<returns>year</returns>
    int GetYear) const
    {
      return year;
    _}
